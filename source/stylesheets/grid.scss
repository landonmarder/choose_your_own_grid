/************************************************************************\
Choose your own grid:
Based off http://codepen.io/daneden/pen/isBdk
\************************************************************************/
$breakpoint: 600px;
$breakpoint_max: 2000px;

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
}

/*---------------------------------------------------*/

// Namespaces
$grid-namespace: "row";
$grid-column-namespace: "column";

// $col-groups are the column groups you want
// For example, $col-groups: (3, 4, 5) will output:
// .column-n-of-3, .column-n-of-4, [...]

// Add or take away different column sizes here!
$col-groups: (2, 3, 4, 5, 100);

// Gutter width
$gutter-width: 20px;

// Takes into account IE8
.lt-ie9 .#{$grid-namespace} {
  margin-left: 0;
}

.#{$grid-namespace} {

  list-style: none;
  margin-left: -$gutter-width;

  > %span-all       { width: percentage(1/1); }

  > %one-half       { width: percentage(1/2); }

  > %one-third      { width: percentage(1/3); }
  > %two-thirds     { width: percentage(2/3); }

  > %one-quarter    { width: percentage(1/4); }
  > %two-quarters   { width: percentage(2/4); }
  > %three-quarters { width: percentage(3/4); }

  > %push-span-all       { margin-left: percentage(1/1); }

  > %push-one-half       { margin-left: percentage(1/2); }

  > %push-one-third      { margin-left: percentage(1/3); }
  > %push-two-thirds     { margin-left: percentage(2/3); }

  > %push-one-quarter    { margin-left: percentage(1/4); }
  > %push-two-quarters   { margin-left: percentage(2/4); }
  > %push-three-quarters { margin-left: percentage(3/4); }

  > %pull-span-all       { margin-left: -(percentage(1/1)); }

  > %pull-one-half       { margin-left: -(percentage(1/2)); }

  > %pull-one-third      { margin-left: -(percentage(1/3)); }
  > %pull-two-thirds     { margin-left: -(percentage(2/3)); }

  > %pull-one-quarter    { margin-left: -(percentage(1/4)); }
  > %pull-two-quarters   { margin-left: -(percentage(2/4)); }
  > %pull-three-quarters { margin-left: -(percentage(3/4)); }

  // For each of our column groups...
  @each $group in $col-groups {

    // For each column width from 1 to the column group...
    @for $i from 1 through $group {
      > .#{$grid-column-namespace}-#{$i}-of-#{$group} {
        @extend %#{$grid-column-namespace};

        @if percentage($i/$group) == percentage(1/1) {
          @extend %span-all;
        } @else if percentage($i/$group) == percentage(1/2) {
          @extend %one-half;
        } @else if percentage($i/$group) == percentage(1/3) {
          @extend %one-third;
        } @else if percentage($i/$group) == percentage(2/3) {
          @extend %two-thirds;
        } @else if percentage($i/$group) == percentage(1/4) {
          @extend %one-quarter;
        } @else if percentage($i/$group) == percentage(2/4) {
          @extend %two-quarters;
        } @else if percentage($i/$group) == percentage(3/4) {
          @extend %three-quarters;
        } @else {

          width: percentage($i/$group);

        }
      }

      > .#{$grid-column-namespace}-push-#{$i}-of-#{$group} {
        @extend %#{$grid-column-namespace};

        @if percentage($i/$group) == percentage(1/1) {
          @extend %push-span-all;
        } @else if percentage($i/$group) == percentage(1/2) {
          @extend %push-one-half;
        } @else if percentage($i/$group) == percentage(1/3) {
          @extend %push-one-third;
        } @else if percentage($i/$group) == percentage(2/3) {
          @extend %push-two-thirds;
        } @else if percentage($i/$group) == percentage(1/4) {
          @extend %push-one-quarter;
        } @else if percentage($i/$group) == percentage(2/4) {
          @extend %push-two-quarters;
        } @else if percentage($i/$group) == percentage(3/4) {
          @extend %push-three-quarters;
        } @else {

          margin-left: percentage($i/$group);
        }
      }
    } // end @for
  } // end @each

  // All direct descendents of .row get treated the same way.
  > *, %#{$grid-column-namespace}, %span-all {
    box-sizing: border-box;
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    display: inline-block;
    margin-right: -.25em;
    min-height: 1px;
    padding-left: $gutter-width;
    vertical-align: top;

    @media screen and (max-width: $breakpoint) {
      display: block;
      margin-left: 0;
      margin-right: 0;
      padding-left: 0;
      width: auto;
    }
  }

  @media screen and (max-width: $breakpoint) {
    margin-left: 0;
    width: auto;
  }
}
